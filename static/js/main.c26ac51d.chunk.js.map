{"version":3,"sources":["components/UI/Header.js","components/UI/Layout.js","components/UI/Field.js","redux/actions/mainActions.js","components/pages/Main.js","components/ExpenseCard.js","components/pages/List.js","api/fetchApi.js","components/App.js","redux/reducers/mainReducer.js","redux/rootReducer.js","redux/store.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","div","Header","to","className","Layout","this","props","children","React","Component","Field","id","labelText","type","placeholder","name","value","onChange","htmlFor","updateExpenses","payload","currencies","Main","state","values","date","money","product","currency","e","target","setState","onClick","preventDefault","history","push","alert","map","carrency","key","mapDispatchToProps","connect","expenses","mainReducer","ExpenseCard","expense","List","total","rates","removeDate","removeDateFromExpenses","filter","getSumInEUR","sumInEur","i","length","console","log","Number","USD","PLN","toFixed","getTotal","url","options","Promise","resolve","reject","fetch","then","res","status","json","catch","error","fetchApi","sort","a","b","split","join","App","basename","exact","path","component","initialState","combineReducers","action","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c26ac51d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nconst Wrapper = styled.div`\r\n  padding: 10px 0;\r\n`;\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <Wrapper>\r\n      <Link to=\"/\" className=\"mr-2\">\r\n        Main\r\n      </Link>\r\n      <Link to=\"/list\">List</Link>\r\n    </Wrapper>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport styled from \"styled-components\";\r\nconst Wrapper = styled.div`\r\n  width: 80%;\r\n  margin: auto;\r\n`;\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Header />\r\n        {this.props.children}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nconst Field = (props) => {\r\n  const {\r\n    id,\r\n    labelText,\r\n    type,\r\n    placeholder,\r\n    name,\r\n    value,\r\n    onChange,\r\n    className,\r\n  } = props;\r\n  return (\r\n    <div>\r\n      <input\r\n        id={id}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        className={className}\r\n      />\r\n      <label htmlFor={id} className=\"ml-2\">\r\n        {labelText}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Field;\r\n","export const updateExpenses = (payload) => {\r\n  return { type: \"UPDATE_EXPENSES\", payload };\r\n};\r\n\r\nexport const removeDateFromExpenses = (payload) => {\r\n  return { type: \"REMOVE_DATE\", payload };\r\n};\r\n","import React from \"react\";\r\nimport Field from \"../UI/Field\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateExpenses } from \"../../redux/actions/mainActions\";\r\n\r\nconst currencies = [\r\n  { name: \"EUR\", id: 1 },\r\n  { name: \"USD\", id: 2 },\r\n  { name: \"PLN\", id: 3 },\r\n];\r\n\r\nclass Main extends React.Component {\r\n  state = {\r\n    values: {\r\n      date: \"\",\r\n      money: \"\",\r\n      product: \"\",\r\n      currency: \"EUR\",\r\n    },\r\n  };\r\n\r\n  onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState((state) => ({\r\n      values: {\r\n        ...state.values,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  onClick = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      values: { date, money, product, currency },\r\n    } = this.state;\r\n    if (date && money && product && currency) {\r\n      this.props.updateExpenses(this.state.values);\r\n      this.props.history.push(\"/list\");\r\n    } else alert(\"Fill in all the fields\");\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      values: { date, money, product, currency },\r\n    } = this.state;\r\n    return (\r\n      <div className=\"mt-2\">\r\n        <h1 className=\"my-4 text-center\">Add new Expense</h1>\r\n        <form>\r\n          <Field\r\n            id=\"1\"\r\n            name=\"date\"\r\n            value={date}\r\n            labelText=\"date\"\r\n            onChange={this.onChange}\r\n            type=\"date\"\r\n            placeholder=\"YY-MM-DD\"\r\n          />\r\n          <Field\r\n            id=\"2\"\r\n            name=\"money\"\r\n            value={money}\r\n            labelText=\"amount of money spent\"\r\n            onChange={this.onChange}\r\n            type=\"number\"\r\n            placeholder=\"value\"\r\n          />\r\n          <select\r\n            id=\"3\"\r\n            name=\"currency\"\r\n            value={currency}\r\n            onChange={this.onChange}\r\n          >\r\n            {currencies.map((carrency) => (\r\n              <option key={carrency.id} value={carrency.name}>\r\n                {carrency.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <label htmlFor=\"3\" className=\"ml-2\">\r\n            currency\r\n          </label>\r\n          <Field\r\n            id=\"4\"\r\n            name=\"product\"\r\n            value={product}\r\n            labelText=\"product\"\r\n            onChange={this.onChange}\r\n            type=\"text\"\r\n            placeholder=\"product\"\r\n          />\r\n          <button onClick={this.onClick} className=\"btn btn-primary mt-2\">\r\n            Add expense\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    expenses: state.mainReducer.expenses,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { updateExpenses };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst Wrapper = styled.div``;\r\n\r\nexport default class ExpenseCard extends React.Component {\r\n  render() {\r\n    const {\r\n      expense: { date, currency, product, money },\r\n    } = this.props;\r\n\r\n    return (\r\n      <Wrapper>\r\n        <div className=\"card mb-2\">\r\n          <div className=\"card-body\">\r\n            <div className=\"card-text\">{`Date: ${date}`}</div>\r\n            <div className=\"card-text\">{`Currency: ${currency}`}</div>\r\n            <div className=\"card-text\">{`Product: ${product}`}</div>\r\n            <div className=\"card-text\">{`Money: ${money}`}</div>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ExpenseCard from \"../ExpenseCard\";\r\nimport {\r\n  updateExpenses,\r\n  removeDateFromExpenses,\r\n} from \"../../redux/actions/mainActions\";\r\nimport Field from \"../UI/Field\";\r\nimport { fetchApi, API_URL, API_KEY } from \"../../api/fetchApi\";\r\n\r\nconst currencies = [\r\n  { name: \"EUR\", id: 1 },\r\n  { name: \"USD\", id: 2 },\r\n  { name: \"PLN\", id: 3 },\r\n];\r\n\r\nclass List extends React.Component {\r\n  state = {\r\n    date: \"\",\r\n    total: \"\",\r\n    currency: \"EUR\",\r\n    rates: null,\r\n  };\r\n\r\n  onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState((state) => ({\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  removeDate = (e) => {\r\n    const { expenses, removeDateFromExpenses } = this.props;\r\n    e.preventDefault();\r\n    if (this.state.date) {\r\n      let newArr = expenses.filter(\r\n        (expense) => expense.date !== this.state.date\r\n      );\r\n      removeDateFromExpenses(newArr);\r\n      this.setState({ date: \"\" });\r\n    } else alert(\"Choose the date\");\r\n  };\r\n\r\n  getSumInEUR = () => {\r\n    const { expenses } = this.props;\r\n    const { rates } = this.state;\r\n    let sumInEur = 0;\r\n    for (let i = 0; i < expenses.length; i++) {\r\n      console.log(expenses[i].currency, expenses[i].money);\r\n      if (expenses[i].currency === \"EUR\") sumInEur += Number(expenses[i].money);\r\n      if (expenses[i].currency === \"USD\")\r\n        sumInEur += Number(expenses[i].money) / rates.USD;\r\n      if (expenses[i].currency === \"PLN\")\r\n        sumInEur += Number(expenses[i].money) / rates.PLN;\r\n    }\r\n    return Number(sumInEur.toFixed(2));\r\n  };\r\n\r\n  getTotal = (e) => {\r\n    e.preventDefault();\r\n    const { currency, rates } = this.state;\r\n    if (currency) {\r\n      switch (currency) {\r\n        case \"USD\":\r\n          return this.setState({\r\n            total: (this.getSumInEUR() * rates.USD).toFixed(2),\r\n          });\r\n        case \"PLN\":\r\n          return this.setState({\r\n            total: (this.getSumInEUR() * rates.PLN).toFixed(2),\r\n          });\r\n        default:\r\n          return this.setState({ total: this.getSumInEUR() });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetchApi(`${API_URL}/latest?access_key=${API_KEY}&base=EUR`).then((res) =>\r\n      this.setState({ rates: res.rates })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { expenses } = this.props;\r\n    const { date, currency, total } = this.state;\r\n    return (\r\n      <div className=\"mt-2\">\r\n        <div className=\"my-2\">\r\n          <select\r\n            id=\"3\"\r\n            name=\"currency\"\r\n            value={currency}\r\n            onChange={this.onChange}\r\n          >\r\n            {currencies.map((carrency) => (\r\n              <option key={carrency.id} value={carrency.name}>\r\n                {carrency.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <label htmlFor=\"3\" className=\"ml-2\">\r\n            Choose the currency\r\n          </label>\r\n          <div>\r\n            <button\r\n              className=\"btn btn-primary my-2 block\"\r\n              onClick={this.getTotal}\r\n            >\r\n              Total\r\n            </button>\r\n            <span className=\"ml-4\">{total}</span>\r\n          </div>\r\n          <Field\r\n            id=\"1\"\r\n            name=\"date\"\r\n            value={date}\r\n            labelText=\"date\"\r\n            onChange={this.onChange}\r\n            type=\"date\"\r\n            placeholder=\"YY-MM-DD\"\r\n          />\r\n          <button className=\"btn btn-dark mt-2\" onClick={this.removeDate}>\r\n            Remove date\r\n          </button>\r\n        </div>\r\n\r\n        {expenses.length > 0 ? (\r\n          <div>\r\n            <h1>Expenses List</h1>\r\n            {expenses\r\n              .sort(\r\n                (a, b) =>\r\n                  a.date.split(\"-\").join(\"\") - b.date.split(\"-\").join(\"\")\r\n              )\r\n              .map((expense, i) => (\r\n                <ExpenseCard expense={expense} key={i} />\r\n              ))}\r\n          </div>\r\n        ) : (\r\n          <h2 className=\"text-center\">Empty List</h2>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    expenses: state.mainReducer.expenses,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { updateExpenses, removeDateFromExpenses };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","export const API_URL = \"http://data.fixer.io/api/\";\r\n\r\nexport const API_KEY = \"0ccbc9cb9f22a7db482075635a2baee1\";\r\n\r\nexport const fetchApi = (url, options = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url, options)\r\n      .then((res) => {\r\n        if (res.status < 400) {\r\n          return res.json();\r\n        } else {\r\n          throw res;\r\n        }\r\n      })\r\n      .then((res) => resolve(res))\r\n      .catch((res) => res.json().then((error) => reject(error)));\r\n  });\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Layout from \"./UI/Layout\";\nimport Main from \"./pages/Main\";\nimport List from \"./pages/List\";\n\nexport const App = () => (\n  <Router basename=\"money_tracker\">\n    <Switch>\n      <Layout>\n        <Route exact path=\"/\" component={Main} />\n        <Route exact path=\"/list\" component={List} />\n      </Layout>\n    </Switch>\n  </Router>\n);\n","const initialState = {\r\n  expenses: [],\r\n};\r\n\r\nexport const mainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_EXPENSES\":\r\n      return {\r\n        ...state,\r\n        expenses: [...state.expenses, action.payload],\r\n      };\r\n    case \"REMOVE_DATE\":\r\n      return {\r\n        ...state,\r\n        expenses: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { mainReducer } from \"./reducers/mainReducer\";\r\n\r\nexport default combineReducers({\r\n  mainReducer,\r\n});\r\n","import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { App } from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}